
repeat
	wait()
until game:IsLoaded() and game.Players.LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR")


if getgenv().INSOLOADED == true then
	game.StarterGui:SetCore("SendNotification", {
		Title = "INSOMNIAC V3";
		Text = "Already Loaded";
	})
	return
end
getgenv().INSOLOADED = true

_G.Fix = false

local L_1_ = game:GetService("UserInputService");
local L_2_ = false
local L_3_ = game:GetService("RunService")
_G.Frame = CFrame.new(0.26, 0, 0) -- sprint
_G.Framee = CFrame.new(-0.26, 0, 0)

_G.Frame1 = CFrame.new(0.42 - 0.2, 0, 0) -- no sprint
_G.Frame2 = CFrame.new(-0.42 + 0.2, 0, 0)

_G.Frame11 = CFrame.new(0.200 - 0.1, 0, 0) -- shoot/low health/reload/cooldown
_G.Frame22 = CFrame.new(-0.200 + 0.1, 0, 0)
--
local L_4_ = false
local L_5_ = false
local L_6_ = false
--
local L_7_ = false
local L_8_ = false
local L_9_ = false

L_1_.InputBegan:Connect(function(L_77_arg0, L_78_arg1)
	if (L_77_arg0.KeyCode == Enum.KeyCode.LeftShift and L_78_arg1 == false) then
		L_6_ = true
		L_9_ = true
	end
end);

L_1_.InputEnded:Connect(function(L_79_arg0, L_80_arg1)
	if (L_79_arg0.KeyCode == Enum.KeyCode.LeftShift and L_80_arg1 == false) then
		L_6_ = false
		L_9_ = false
	end
end);
--
L_1_.InputBegan:Connect(function(L_81_arg0, L_82_arg1)
	if (L_81_arg0.KeyCode == Enum.KeyCode.A and L_82_arg1 == false) then
		L_5_ = true
	end
end);
L_1_.InputEnded:Connect(function(L_83_arg0, L_84_arg1)
	if (L_83_arg0.KeyCode == Enum.KeyCode.A and L_84_arg1 == false) then
		L_5_ = false
	end
end);
--
L_1_.InputBegan:Connect(function(L_85_arg0, L_86_arg1)
	if (L_85_arg0.KeyCode == Enum.KeyCode.D and L_86_arg1 == false) then
		L_8_ = true
	end
end);
L_1_.InputEnded:Connect(function(L_87_arg0, L_88_arg1)
	if (L_87_arg0.KeyCode == Enum.KeyCode.D and L_88_arg1 == false) then
		L_8_ = false
	end
end);
--
game:GetService("RunService").RenderStepped:Connect(function()
	if L_2_ == true and L_5_ == true and L_6_ == false and L_4_ == false then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Frame1
	end
    --
	if L_2_ == true and L_6_ == true and L_5_ == true and L_4_ == false then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Frame
	end
    ---------------------------------------------------------------------
	if L_2_ == true and L_8_ == true and L_9_ == false and L_7_ == false then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Frame2
	end
    --
	if L_2_ == true and L_9_ == true and L_8_ == true and L_7_ == false then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Framee
	end
    ---------------------------------------------------------------------
	if L_2_ == true and game.Players.LocalPlayer.Character.Humanoid.WalkSpeed <= 15 then
		L_4_ = true
		L_7_ = true
	else
		L_4_ = false
		L_7_ = false
	end
    ---------------------------------------------------------------------
	if L_2_ == true and L_4_ == true and L_5_ == true then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Frame11
	end
    --
	if L_2_ == true and L_7_ == true and L_8_ == true then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * _G.Frame22
	end
    --

end)
L_1_.InputEnded:Connect(function(L_89_arg0, L_90_arg1)
	if (L_89_arg0.KeyCode == nil and L_90_arg1 == false) then
		if L_2_ == false then
			L_2_ = true
		else
			L_2_ = false
		end
	end
end)
game:GetService("RunService").Stepped:wait()

if _G.Fix == true then
	loadstring(game:HttpGet("https://raw.githubusercontent.com/tayodevelup/secretinsomniac/main/asd123"))()
end
local L_10_ = game.Players.LocalPlayer
local L_11_ = L_10_:GetMouse()
local L_12_ = game:GetService("RunService")

circle = Drawing.new("Circle")
circle.Color = Color3.fromRGB(109, 5, 173)
circle.Thickness = 0.1
circle.NumSides = 3500
circle.Radius = 50
circle.Visible = false
circle.Filled = false
circle.Transparency = 0.5

L_12_.RenderStepped:Connect(function()
	circle.Position = Vector2.new(L_11_.X, L_11_.Y + 35)
end)





getgenv().OldAimPart = "HumanoidRootPart"
getgenv().AimPart = "HumanoidRootPart" -- For R15 Games: {UpperTorso, LowerTorso, HumanoidRootPart, Head} | For R6 Games: {Head, Torso, HumanoidRootPart}
getgenv().AimlockKey = "q"
getgenv().AimRadius = 30 -- How far away from someones character you want to lock on at
getgenv().ThirdPerson = true
getgenv().FirstPerson = true
getgenv().TeamCheck = false -- Check if Target is on your Team (True means it wont lock onto your teamates, false is vice versa) (Set it to false if there are no teams)
getgenv().PredictMovement = true -- Predicts if they are moving in fast velocity (like jumping) so the aimbot will go a bit faster to match their speed
getgenv().PredictionVelocity = 7
getgenv().CheckIfJumped = false
getgenv().AutoPrediction = false
local L_13_, L_14_, L_15_, L_16_ = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
local L_17_, L_18_, L_19_, L_20_, L_21_, L_22_, L_23_ = L_13_.LocalPlayer, L_13_.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
local L_24_, L_25_, L_26_ = false, false, false;
local L_27_;
local L_28_;
getgenv().WorldToViewportPoint = function(L_91_arg0)
	return L_19_:WorldToViewportPoint(L_91_arg0)
end
getgenv().WorldToScreenPoint = function(L_92_arg0)
	return L_19_.WorldToScreenPoint(L_19_, L_92_arg0)
end
getgenv().GetObscuringObjects = function(L_93_arg0)
	if L_93_arg0 and L_93_arg0:FindFirstChild(getgenv().AimPart) and L_17_ and L_17_.Character:FindFirstChild("Head") then
		local L_94_ = workspace:FindPartOnRay(L_21_(
                L_93_arg0[getgenv().AimPart].Position, L_17_.Character.Head.Position)
            )
		if L_94_ then
			return L_94_:IsDescendantOf(L_93_arg0)
		end
	end
end
getgenv().GetNearestTarget = function()
        -- Credits to whoever made this, i didnt make it, and my own mouse2plr function kinda sucks
	local L_95_ = {}
	local L_96_  = {}
	local L_97_ = {}
	for L_99_forvar0, L_100_forvar1 in pairs(L_13_:GetPlayers()) do
		if L_100_forvar1 ~= L_17_ then
			table.insert(L_95_, L_100_forvar1)
		end
	end
	for L_101_forvar0, L_102_forvar1 in pairs(L_95_) do
		if L_102_forvar1.Character ~= nil then
			local L_103_ = L_102_forvar1.Character:FindFirstChild("Head")
			if getgenv().TeamCheck == true and L_102_forvar1.Team ~= L_17_.Team then
				local L_104_ = (L_102_forvar1.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
				local L_105_ = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (L_18_.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * L_104_)
				local L_106_, L_107_ = game.Workspace:FindPartOnRay(L_105_, game.Workspace)
				local L_108_ = math.floor((L_107_ - L_103_.Position).magnitude)
				L_96_[L_102_forvar1.Name .. L_101_forvar0] = {}
				L_96_[L_102_forvar1.Name .. L_101_forvar0].dist = L_104_
				L_96_[L_102_forvar1.Name .. L_101_forvar0].plr = L_102_forvar1
				L_96_[L_102_forvar1.Name .. L_101_forvar0].diff = L_108_
				table.insert(L_97_, L_108_)
			elseif getgenv().TeamCheck == false and L_102_forvar1.Team == L_17_.Team then
				local L_109_ = (L_102_forvar1.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
				local L_110_ = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (L_18_.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * L_109_)
				local L_111_, L_112_ = game.Workspace:FindPartOnRay(L_110_, game.Workspace)
				local L_113_ = math.floor((L_112_ - L_103_.Position).magnitude)
				L_96_[L_102_forvar1.Name .. L_101_forvar0] = {}
				L_96_[L_102_forvar1.Name .. L_101_forvar0].dist = L_109_
				L_96_[L_102_forvar1.Name .. L_101_forvar0].plr = L_102_forvar1
				L_96_[L_102_forvar1.Name .. L_101_forvar0].diff = L_113_
				table.insert(L_97_, L_113_)
			end
		end
	end
	if unpack(L_97_) == nil then
		return nil
	end
	local L_98_ = math.floor(math.min(unpack(L_97_)))
	if L_98_ > getgenv().AimRadius then
		return nil
	end
	for L_114_forvar0, L_115_forvar1 in pairs(L_96_) do
		if L_115_forvar1.diff == L_98_ then
			return L_115_forvar1.plr
		end
	end
	return nil
end
L_18_.KeyDown:Connect(function(L_116_arg0)
	if not (L_14_:GetFocusedTextBox()) then
		if L_116_arg0 == AimlockKey and L_27_ == nil then
			pcall(function()
				if L_25_ ~= true then
					L_25_ = true
				end
				local L_117_;
				L_117_ = GetNearestTarget()
				if L_117_ ~= nil then
					L_27_ = L_117_
				end
			end)
		elseif L_116_arg0 == AimlockKey and L_27_ ~= nil then
			if L_27_ ~= nil then
				L_27_ = nil
			end
			if L_25_ ~= false then
				L_25_ = false
			end
		end
	end
end)
L_15_.RenderStepped:Connect(function()
	if getgenv().ThirdPerson == true and getgenv().FirstPerson == true then
		if (L_19_.Focus.p - L_19_.CoordinateFrame.p).Magnitude > 1 or (L_19_.Focus.p - L_19_.CoordinateFrame.p).Magnitude <= 1 then
			L_26_ = true
		else
			L_26_ = false
		end
	elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then
		if (L_19_.Focus.p - L_19_.CoordinateFrame.p).Magnitude > 1 then
			L_26_ = true
		else
			L_26_ = false
		end
	elseif getgenv().ThirdPerson == false and getgenv().FirstPerson == true then
		if (L_19_.Focus.p - L_19_.CoordinateFrame.p).Magnitude <= 1 then
			L_26_ = true
		else
			L_26_ = false
		end
	end
	if L_24_ == true and L_25_ == true then
		if L_27_ and L_27_.Character and L_27_.Character:FindFirstChild(getgenv().AimPart) then
			if getgenv().FirstPerson == true then
				if L_26_ == true then
					if getgenv().PredictMovement == true then
						L_19_.CFrame = L_20_(L_19_.CFrame.p, L_27_.Character[getgenv().AimPart].Position + L_27_.Character[getgenv().AimPart].Velocity / PredictionVelocity)
					elseif getgenv().PredictMovement == false then
						L_19_.CFrame = L_20_(L_19_.CFrame.p, L_27_.Character[getgenv().AimPart].Position)
					end
				end
			elseif getgenv().ThirdPerson == true then
				if L_26_ == true then
					if getgenv().PredictMovement == true then
						L_19_.CFrame = L_20_(L_19_.CFrame.p, L_27_.Character[getgenv().AimPart].Position + L_27_.Character[getgenv().AimPart].Velocity / PredictionVelocity)
					elseif getgenv().PredictMovement == false then
						L_19_.CFrame = L_20_(L_19_.CFrame.p, L_27_.Character[getgenv().AimPart].Position)
					end
				end
			end
		end
	end
	if CheckIfJumped == true then
		if L_27_.Character.Humanoid.FloorMaterial == Enum.Material.Air then
			getgenv().AimPart = "RightFoot"
		else
			getgenv().AimPart = getgenv().OldAimPart
		end
	end
end)


if getgenv().AutoPrediction == true then
	wait(5.2)
	local L_118_ = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
	local L_119_ = string.split(L_118_, '(')
	local L_120_ = tonumber(L_119_[1])
	local L_121_ = pingValue[1]
	if  L_120_ < 250 then
		getgenv().PredictionVelocity = 4.89
	elseif L_120_ < 150 then
		getgenv().PredictionVelocity = 5.5
	elseif L_120_ < 130 then
		getgenv().PredictionVelocity = 6.34
	elseif L_120_ < 120 then
		getgenv().PredictionVelocity = 6.54
	elseif L_120_ < 110 then
		getgenv().PredictionVelocity = 6.6
	elseif L_120_ < 105 then
		getgenv().PredictionVelocity = 7
	elseif L_120_ < 90 then
		getgenv().PredictionVelocity = 7
	elseif L_120_ < 80 then
		getgenv().PredictionVelocity = 7
	elseif L_120_ < 70 then
		getgenv().PredictionVelocity = 9
	elseif L_120_ < 60 then
		getgenv().PredictionVelocity = 9
	elseif L_120_ < 50 then
		getgenv().PredictionVelocity = 8.7
	elseif L_120_ < 40 then
		getgenv().PredictionVelocity = 10.39
	end
end



-- lib shit
local L_29_ =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/tayodevelup/secretinsomniac/main/12315", true))()
local L_30_ = L_29_:CreateWatermark("INSOMNIAC V3 ?? |{fps}| {game}")

local L_31_ = L_29_:CreateWindow("INSOMNIAC V3", Vector2.new(492, 598), Enum.KeyCode.RightShift)
local L_32_ = L_31_:CreateTab("Rage")
local L_33_ = L_31_:CreateTab("Legit")
local L_34_ = L_31_:CreateTab("Misc")

-- sections
local L_35_ = L_32_:CreateSector("Aimbot")
local L_36_ = L_32_:CreateSector("FOV")
local L_37_ = L_32_:CreateSector("Anti-Aim", "Right")
local L_38_ = L_32_:CreateSector("God", "Right")
local L_39_ = L_34_:CreateSector("Misc")
local L_40_ = L_34_:CreateSector("Character")
local L_41_ = L_34_:CreateSector("Teleports", "Right")
local L_42_ = L_34_:CreateSector("Auto-Buy", "Right")
local L_43_ = L_33_:CreateSector("Silent Aim")
local L_44_ = L_33_:CreateSector("Silent Aim FOV")
local L_45_ = L_33_:CreateSector("Silent Aimbot", "Right")

-- toggles, buttons, textboxes, dropdowns
local L_46_ = L_35_:AddToggle("Aimbot", false, function(L_122_arg0)
	L_24_ = L_122_arg0
end)
L_46_:AddKeybind()

local L_47_ = L_35_:AddTextbox("Bind", "", function(L_123_arg0)
	AimlockKey = L_123_arg0
end)
local L_48_ = L_35_:AddTextbox("Prediction Velocity", "", function(L_124_arg0)
	PredictionVelocity = bananaxd
end)
local L_49_ = L_35_:AddDropdown("Hitboxes",  {
	"Head",
	"UpperTorso",
	"HumanoidRootPart",
	"LowerTorso",
	"RightFoot"
}, "HumanoidRootPart", function(L_125_arg0)
	getgenv().AimPart = L_125_arg0
	getgenv().OldAimPart = L_125_arg0
end)
local L_50_ = L_35_:AddToggle("Team Check", false, function(L_126_arg0)
	getgenv().TeamCheck = L_126_arg0
end)
local L_51_ = L_36_:AddToggle("Aimbot FOV", false, function(L_127_arg0)
	circle.Visible = L_127_arg0
end)
L_51_:AddColorpicker(Color3.new(), function(L_128_arg0)
	circle.Color = L_128_arg0
end)

L_36_:AddToggle("Filled", false, function(L_129_arg0)
	circle.Filled = L_129_arg0
end)

L_36_:AddSlider("Size", 0, 1, 320, 30, function(L_130_arg0)
	circle.Radius = L_130_arg0
end)

L_36_:AddToggle("Square FOV", false, function()
	circle.NumSides = 4
end)

L_36_:AddToggle("Circle FOV", false, function()
	circle.NumSides = 350
end)


local L_52_ = L_35_:AddToggle("Airshot Function", false, function(L_131_arg0)
	CheckIfJumped = L_131_arg0
end)

local L_53_ = L_35_:AddToggle("Auto Adjust", false, function(L_132_arg0)
	AutoPrediction = L_132_arg0
end)

local L_54_ = L_35_:AddSlider("Aim Radius", 0, 10, 100, 30, function(L_133_arg0)
	getgenv().AimRadius = L_133_arg0
end)
         


local L_55_ =  L_39_:AddButton("CFrame Speed (N)", function()
	repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.N then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
end)   






local L_56_ = L_39_:AddSlider("Speed", 0, 1, 5, 1, function(L_141_arg0)
	getgenv().Multiplier = L_141_arg0
end)

L_39_:AddTextbox("Custom Speed", "", function(L_142_arg0)
	getgenv().Multiplier = L_142_arg0
end)
L_39_:AddButton("Fly (X)", function()
	local L_143_ = game.Players.LocalPlayer
	local L_144_ = L_143_:GetMouse()
	localplayer = L_143_
	if workspace:FindFirstChild("Core") then
		workspace.Core:Destroy()
	end
	local L_145_ = Instance.new("Part")
	L_145_.Name = "Core"
	L_145_.Size = Vector3.new(0.05, 0.05, 0.05)
	spawn(function()
		L_145_.Parent = workspace
		local L_152_ = Instance.new("Weld", L_145_)
		L_152_.Part0 = L_145_
		L_152_.Part1 = localplayer.Character.LowerTorso
		L_152_.C0 = CFrame.new(0, 0, 0)
	end)
	workspace:WaitForChild("Core")
	local L_146_ = workspace.Core
	flying = true
	local L_147_ = 25
	local L_148_ = {
		a = false,
		d = false,
		w = false,
		s = false
	}
	local L_149_
	local L_150_
	local function L_151_func()
		local L_153_ = Instance.new("BodyPosition", L_146_)
		local L_154_ = Instance.new("BodyGyro", L_146_)
		L_153_.Name = "EPIXPOS"
		L_153_.maxForce = Vector3.new(math.huge, math.huge, math.huge)
		L_153_.position = L_146_.Position
		L_154_.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		L_154_.cframe = L_146_.CFrame
		repeat
			wait()
			localplayer.Character.Humanoid.PlatformStand = true
			local L_155_ = L_154_.cframe - L_154_.cframe.p + L_153_.position
			if not L_148_.w and not L_148_.s and not L_148_.a and not L_148_.d then
				L_147_ = 25
			end
			if L_148_.w then
				L_155_ = L_155_ + workspace.CurrentCamera.CoordinateFrame.lookVector * L_147_
				L_147_ = L_147_ + 0
			end
			if L_148_.s then
				L_155_ = L_155_ - workspace.CurrentCamera.CoordinateFrame.lookVector * L_147_
				L_147_ = L_147_ + 0
			end
			if L_148_.d then
				L_155_ = L_155_ * CFrame.new(L_147_, 0, 0)
				L_147_ = L_147_ + 0
			end
			if L_148_.a then
				L_155_ = L_155_ * CFrame.new(-L_147_, 0, 0)
				L_147_ = L_147_ + 0
			end
			if L_147_ > 10 then
				L_147_ = 25
			end
			L_153_.position = L_155_.p
			if L_148_.w then
				L_154_.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(L_147_ * 0), 0, 0)
			elseif L_148_.s then
				L_154_.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(L_147_ * 0), 0, 0)
			else
				L_154_.cframe = workspace.CurrentCamera.CoordinateFrame
			end
		until flying == false
		if L_154_ then
			L_154_:Destroy()
		end
		if L_153_ then
			L_153_:Destroy()
		end
		flying = false
		localplayer.Character.Humanoid.PlatformStand = false
		L_147_ = 25
	end
	L_149_ = L_144_.KeyDown:connect(function(L_156_arg0)
		if not L_146_ or not L_146_.Parent then
			flying = false
			L_149_:disconnect()
			L_150_:disconnect()
			return
		end
		if L_156_arg0 == "w" then
			L_148_.w = true
		elseif L_156_arg0 == "s" then
			L_148_.s = true
		elseif L_156_arg0 == "a" then
			L_148_.a = true
		elseif L_156_arg0 == "d" then
			L_148_.d = true
		elseif L_156_arg0 == "x" then
			if flying == true then
				flying = false
			else
				flying = true
				L_151_func()
			end
		end
	end)
	L_150_ = L_144_.KeyUp:connect(function(L_157_arg0)
		if L_157_arg0 == "w" then
			L_148_.w = false
		elseif L_157_arg0 == "s" then
			L_148_.s = false
		elseif L_157_arg0 == "a" then
			L_148_.a = false
		elseif L_157_arg0 == "d" then
			L_148_.d = false
		end
	end)
	L_151_func()
end)


L_39_:AddButton("No Recoil", function()
	function isframework(L_158_arg0)
		if tostring(L_158_arg0) == "Framework" then
			return true
		end
		return false
	end
	function checkArgs(L_159_arg0, L_160_arg1)
		if tostring(L_159_arg0):lower():find("camera") and tostring(L_160_arg1) == "CFrame" then
			return true
		end
		return false
	end
	newindex = hookmetamethod(game, "__newindex", function(L_161_arg0, L_162_arg1, L_163_arg2)
		local L_164_ = getcallingscript()
		if isframework(L_164_) and checkArgs(L_161_arg0, L_162_arg1) then
			return;
		end
		return newindex(L_161_arg0, L_162_arg1, L_163_arg2)
	end)
end)


L_39_:AddButton("Auto-Clicker (V)", function()
	getgenv().Settings = {
		["Auto Click Keybind"] = "V", -- Use an UpperCase letter or KeyCode Enum. Ex: Enum.KeyCode.Semicolon
		["Lock Mouse Position Keybind"] = "B",
		["Right Click"] = false,
		["GUI"] = false, -- A drawing gui that tells you what is going on with the autoclicker.
		["Delay"] = 0 -- 0 for RenderStepped, other numbers go to regular wait timings.
	}
	loadstring(game:HttpGet("https://raw.githubusercontent.com/tayodevelup/secretinsomniac/main/asdadas"))()
end)


L_37_:AddButton("Spin-Bot (C)", function()
	local L_165_ = false
	local L_166_ = game:GetService("UserInputService");
	L_166_.InputBegan:Connect(function(L_167_arg0, L_168_arg1)
		if (L_167_arg0.KeyCode == Enum.KeyCode.C and L_168_arg1 == false) then
			if L_165_ == false then
				L_165_ = true
				wait()
				getgenv().urspeed = 500
				local L_169_ = game.Players.LocalPlayer.Character
				while wait() do
					L_169_.HumanoidRootPart.CFrame = L_169_.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(urspeed), 0)
				end
			else
				L_165_ = false
				getgenv().urspeed = 0
			end
		end
	end);
	game:GetService('RunService').Stepped:connect(function()
		if L_165_ == true then
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if L_165_ == false then
			stopTracks();
		end
	end)
end)


local L_57_ = L_39_:AddToggle("Force Reset", false, function()
	for L_170_forvar0, L_171_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if L_171_forvar1:IsA("BasePart") then
			L_171_forvar1:Destroy()
		end
	end
end)
L_57_:AddKeybind()

local L_58_ = L_39_:AddToggle("Anti-Fling", false, function(L_172_arg0)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = L_172_arg0
end)
L_58_:AddKeybind()

local L_59_ = L_39_:AddToggle("Auto-Stomp", false, function(L_173_arg0)
	autostomp = L_173_arg0
	game:GetService("RunService").Stepped:connect(function()
		if autostomp then
			game.ReplicatedStorage.MainEvent:FireServer("Stomp")
		end
	end)
	L_10_ = game.Players.LocalPlayer
	L_11_ = L_10_:GetMouse()
	L_11_.KeyDown:connect(function(L_174_arg0)
		if L_174_arg0 == "h" then
			autostomp = not autostomp
			game.ReplicatedStorage.MainEvent:FireServer("Stomp")
		end
	end)
end)
L_59_:AddKeybind()
local L_60_ = L_39_:AddToggle("Anti-Slow", false, function(L_175_arg0)
	antislow = L_175_arg0
	repeat
		wait(0.1)
		local L_176_ = game.Players.LocalPlayer
		local L_177_ = L_176_.Character.BodyEffects.Movement:FindFirstChild('NoJumping') or L_176_.Character.BodyEffects.Movement:FindFirstChild('ReduceWalk') or L_176_.Character.BodyEffects.Movement:FindFirstChild('NoWalkSpeed')
		if L_177_ then
			L_177_:Destroy()
		end
		if L_176_.Character.BodyEffects.Reload.Value == true then
			L_176_.Character.BodyEffects.Reload.Value = false
		end
	until antislow == false
end)
L_60_:AddKeybind()

local L_61_ = L_39_:AddToggle("Unbag", false, function()
	game.Players.LocalPlayer.Character["Christmas_Sock"]:Destroy()	
end)
local L_62_ = L_39_:AddToggle("Crosshair Visible", true, function(L_178_arg0)
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Visible = L_178_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = L_178_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = L_178_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = L_178_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = L_178_arg0
end)


L_62_:AddColorpicker(Color3.new(), function(L_179_arg0)
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = L_179_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = L_179_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = L_179_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = L_179_arg0
	game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = L_179_arg0
end)
L_61_:AddKeybind()
local L_63_ = L_39_:AddSlider("FOV", 0, 70, 120, 70, function(L_180_arg0)
	amount = L_180_arg0
	game:GetService'Workspace'.Camera.FieldOfView = amount
end)

local L_64_ = L_39_:AddToggle("Watermark", false, function(L_181_arg0)
	L_30_.Visible = L_181_arg0
end)
local L_65_
L_37_:AddToggle("Legit Anti-Lock (165+ FPS)", false, function(L_182_arg0)
	L_2_ = L_182_arg0
end)

L_37_:AddButton("Anti-Lock (Normal) (Z)", function()
	repeat
		wait()
	until game:IsLoaded()
	getgenv().Fix = false
	getgenv().TeclasWS = {
		["tecla1"] = "nil", -- speed +5
		["tecla2"] = "nil", -- speed -5
		["tecla3"] = "H" -- toggle
	}



-- // servicios
	local L_183_ = game:GetService("Players")
	local L_184_ = game:GetService("StarterGui") or "son una mierda"

-- // objetos
	local L_185_ = L_183_.LocalPlayer
	local L_186_ = L_185_:GetMouse()

-- // variables
	local L_187_ = getrenv()._G
	local L_188_ = getrawmetatable(game)
	local L_189_ = L_188_.__newindex
	local L_190_ = L_188_.__index
	local L_191_ = 22
	local L_192_ = true

-- // funciones para acortar codigo :]
	function anunciar_atentado_terrorista(L_199_arg0)
		L_184_:SetCore("SendNotification", {
			Title = "anti lock fix",
			Text = L_199_arg0
		})
	end
	getgenv().TECHWAREWALKSPEED_LOADED = true
	wait(1.5)
	anunciar_atentado_terrorista("Press  " .. TeclasWS.tecla3 .. " To Turn On/Off Anti-Lock Fix")

-- // conexión
	L_186_.KeyDown:Connect(function(L_200_arg0)
		if L_200_arg0:lower() == TeclasWS.tecla1:lower() then
			L_191_ = L_191_ + 1
			anunciar_atentado_terrorista("???????? (speed = " .. tostring(L_191_) .. ")")
		elseif L_200_arg0:lower() == TeclasWS.tecla2:lower() then
			L_191_ = L_191_ - 1
			anunciar_atentado_terrorista("???????? (speed = " .. tostring(L_191_) .. ")")
		elseif L_200_arg0:lower() == TeclasWS.tecla3:lower() then
			if L_192_ then
				L_192_ = false
				anunciar_atentado_terrorista("anti lock fix off")
			else
				L_192_ = true
				anunciar_atentado_terrorista("anti lock fix on")
			end
		end
	end)

-- // mi parte favorita: metametodos
	setreadonly(L_188_, false)
	L_188_.__index = newcclosure(function(L_201_arg0, L_202_arg1)
		local L_203_ = checkcaller()
		if L_202_arg1 == "WalkSpeed" and not L_203_ then
			return L_187_.CurrentWS
		end
		return L_190_(L_201_arg0, L_202_arg1)
	end)
	L_188_.__newindex = newcclosure(function(L_204_arg0, L_205_arg1, L_206_arg2)
		local L_207_ = checkcaller()
		if L_192_ then
			if L_205_arg1 == "WalkSpeed" and L_206_arg2 ~= 0 and not L_207_ then
				return L_189_(L_204_arg0, L_205_arg1, L_191_)
			end
		end
		return L_189_(L_204_arg0, L_205_arg1, L_206_arg2)
	end)
	setreadonly(L_188_, true)
	repeat
		wait()
	until game:IsLoaded()
	local L_193_ = game:service('Players')
	local L_194_ = L_193_.LocalPlayer
	repeat
		wait()
	until L_194_.Character
	local L_195_ = game:service('UserInputService')
	local L_196_ = game:service('RunService')
	getgenv().Multiplier = 0.27
	local L_197_ = false
	local L_198_
	L_195_.InputBegan:connect(function(L_208_arg0)
		if L_208_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_195_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_208_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_195_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_208_arg0.KeyCode == Enum.KeyCode.Z then
			L_197_ = not L_197_
			if L_197_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + -game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_197_ == false
			end
		end
	end)
	if Fix == true then
   -- This file was generated using Luraph Obfuscator v12.2 by memcorrupt.
		local L_209_ = assert
		local L_210_ = select
		local L_211_ = tonumber
		local L_212_ = unpack
		local L_213_ = pcall
		local L_214_ = setfenv
		local L_215_ = setmetatable
		local L_216_ = type
		local L_217_ = getfenv
		local L_218_ = tostring
		local L_219_ = error
		local L_220_ = string.sub
		local L_221_ = string.byte
		local L_222_ = string.char
		local L_223_ = string.rep
		local L_224_ = string.gsub
		local L_225_ = string.match
		local L_226_ = L_221_("c", 1)
		local L_227_, L_228_ = #{
			3852
		}, #{
			1542,
			4736,
			4007,
			4631,
			3665,
			5388,
			3846,
			6707,
			6297,
			3491,
			6638,
			322,
			1151,
			2603,
			563,
			2191,
			1745,
			3784,
			3605,
			549,
			3440
		} + L_226_ + 130951
		local L_229_ = {}
		local L_230_ = 1
		local function L_231_func(L_232_arg0, L_233_arg1)
			local L_234_
			L_232_arg0 = L_224_(L_220_(L_232_arg0, 5), "..", function(L_246_arg0)
				if L_221_(L_246_arg0, 2) == 72 then
					L_234_ = L_211_(L_220_(L_246_arg0, 1, 1))
					return ""
				else
					local L_247_ = L_222_(L_211_(L_246_arg0, 16))
					if L_234_ then
						local L_248_ = L_223_(L_247_, L_234_)
						L_234_ = nil
						return L_248_
					else
						return L_247_
					end
				end
			end)
			local function L_235_func()
				local L_249_ = L_221_(L_232_arg0, L_230_, L_230_)
				L_230_ = L_230_ + 1
				return L_249_
			end
			local function L_236_func()
				local L_250_, L_251_, L_252_, L_253_ = L_221_(L_232_arg0, L_230_, L_230_ + 3)
				L_230_ = L_230_ + 4
				return L_253_ * 16777216 + L_252_ * 65536 + L_251_ * 256 + L_250_
			end
			local function L_237_func(L_254_arg0, L_255_arg1, L_256_arg2)
				if L_256_arg2 then
					local L_257_, L_258_ = 0, 0
					for L_259_forvar0 = L_255_arg1, L_256_arg2 do
						L_257_ = L_257_ + 2 ^ L_258_ * L_237_func(L_254_arg0, L_259_forvar0)
						L_258_ = L_258_ + 1
					end
					return L_257_
				else
					local L_260_ = 2 ^ (L_255_arg1 - 1)
					return L_260_ <= L_254_arg0 % (L_260_ + L_260_) and 1 or 0
				end
			end
			local function L_238_func()
				local L_261_, L_262_ = L_236_func(), L_236_func()
				if L_261_ == 0 and L_262_ == 0 then
					return 0
				end
				return (-2 * L_237_func(L_262_, 32) + 1) * 2 ^ (L_237_func(L_262_, 21, 31) - 1023) * ((L_237_func(L_262_, 1, 20) * 4294967296 + L_261_) / 4503599627370496 + 1)
			end
			local function L_239_func(L_263_arg0)
				local L_264_ = {
					L_221_(L_232_arg0, L_230_, L_230_ + 3)
				}
				L_230_ = L_230_ + 4
				local L_265_ = {
					nil,
					nil,
					nil,
					nil,
					nil,
					nil,
					nil,
					nil
				}
				for L_271_forvar0 = 1, 8 do
					L_265_[L_271_forvar0] = L_237_func(L_263_arg0, L_271_forvar0)
				end
				local L_266_ = ""
				for L_272_forvar0 = 1, 4 do
					local L_273_, L_274_ = 0, 0
					for L_275_forvar0 = 1, 8 do
						local L_276_ = L_237_func(L_264_[L_272_forvar0], L_275_forvar0)
						if L_265_[L_275_forvar0] == 1 then
							L_276_ = L_276_ == 1 and 0 or 1
						end
						L_273_ = L_273_ + 2 ^ L_274_ * L_276_
						L_274_ = L_274_ + 1
					end
					L_266_ = L_266_ .. L_222_(L_273_)
				end
				local L_267_, L_268_, L_269_, L_270_ = L_221_(L_266_, 1, 4)
				return L_270_ * 16777216 + L_269_ * 65536 + L_268_ * 256 + L_267_
			end
			local function L_240_func(L_277_arg0)
				local L_278_ = L_236_func()
				L_230_ = L_230_ + L_278_
				local L_279_ = {
					nil,
					nil,
					nil,
					nil,
					nil,
					nil,
					nil,
					nil
				}
				for L_281_forvar0 = 1, 8 do
					L_279_[L_281_forvar0] = L_237_func(L_277_arg0, L_281_forvar0)
				end
				local L_280_ = ""
				for L_282_forvar0 = 1, L_278_ do
					local L_283_, L_284_ = 0, 0
					for L_285_forvar0 = 1, 8 do
						local L_286_ = L_237_func(L_221_(L_232_arg0, L_230_ - L_278_ + L_282_forvar0 - 1), L_285_forvar0)
						if L_279_[L_285_forvar0] == 1 then
							L_286_ = L_286_ == 1 and 0 or 1
						end
						L_283_ = L_283_ + 2 ^ L_284_ * L_286_
						L_284_ = L_284_ + 1
					end
					L_280_ = L_280_ .. L_222_(L_283_)
				end
				return L_280_
			end
			local L_241_ = L_235_func()
			local L_242_ = L_235_func()
			local function L_243_func()
				local L_287_ = {
					[103667] = {},
					[38060] = {},
					[45149] = {},
					[9417] = {}
				}
				L_236_func()
				L_235_func()
				L_236_func()
				local L_288_ = L_236_func()
				for L_292_forvar0 = L_227_, L_288_ do
					L_287_[45149][L_292_forvar0] = L_236_func()
				end
				L_235_func()
				L_236_func()
				L_235_func()
				L_236_func()
				L_236_func()
				L_235_func()
				L_236_func()
				L_235_func()
				local L_289_ = L_236_func() - (#{
					1370,
					1209,
					4744,
					2762,
					2762,
					4496,
					746,
					2097,
					868,
					675,
					5896,
					5905,
					1264,
					1377,
					2324,
					2535,
					2455,
					2024,
					4200,
					819,
					2174
				} + L_226_ + 133651)
				for L_293_forvar0 = L_227_, L_289_ do
					local L_294_ = {}
					local L_295_ = L_239_func(L_242_)
					L_294_[45656] = L_237_func(L_295_, #{
						5814
					}, #{
						3157,
						742,
						1730,
						4905,
						389,
						6452,
						849,
						5686,
						6065
					})
					L_294_[61862] = L_237_func(L_295_, #{
						2964
					}, #{
						56,
						3876,
						5543,
						6838,
						3598,
						6818,
						5391,
						6122,
						925,
						4757,
						859,
						1878,
						4590,
						67,
						4836,
						2634,
						4282,
						4271
					})
					L_294_[18579] = L_237_func(L_295_, #{
						570,
						2790,
						6499,
						5,
						4155,
						3345,
						5596,
						6074,
						6955,
						3140,
						615,
						479,
						1033,
						3672,
						6567,
						1655,
						659,
						5115,
						4899
					}, #{
						4263,
						540,
						5996,
						1550,
						1109,
						1963,
						6238,
						6961,
						1601,
						5125,
						3322,
						365,
						4954,
						3184,
						3351,
						6810,
						5650,
						1673,
						6936,
						2988,
						3398
					} + L_226_ + -94)
					L_294_[130194] = L_237_func(L_295_, #{
						1771
					}, #{
						2731,
						6825,
						2697,
						6338,
						6780,
						5662,
						3663,
						3474,
						3520,
						1857,
						696,
						4324,
						2551,
						4854,
						798,
						2400,
						2686,
						456
					})
					L_294_[38582] = L_237_func(L_295_, #{
						5493,
						4999,
						5858,
						2245,
						644,
						4538,
						5372,
						5497,
						5274,
						1576,
						4080,
						6763,
						929,
						471,
						165,
						6493,
						3877,
						5587,
						4223,
						6203
					} + L_226_ + -92, #{
						1746,
						5174,
						1303,
						2907,
						2470,
						5017,
						1137,
						3995,
						6202,
						3939,
						4308,
						5391,
						6640,
						292,
						4747,
						1302,
						3306,
						3916,
						6595,
						1005,
						5661,
						6400
					} + L_226_ + -89)
					L_294_[34201] = L_237_func(L_295_, #{
						6706
					}, #{
						5101,
						1298,
						5093,
						3944,
						3662,
						6753,
						1063,
						1882,
						3440
					})
					L_294_[40637] = L_237_func(L_295_, #{
						5506,
						6555,
						4666,
						4578,
						6077,
						952,
						6770,
						5796,
						3294,
						5346
					}, #{
						6870,
						6346,
						5674,
						6256,
						6409,
						5479,
						1114,
						5034,
						5823,
						1774,
						6060,
						4946,
						3493,
						2373,
						5582,
						1197,
						3453,
						6819
					})
					L_287_[9417][L_293_forvar0] = L_294_
				end
				L_236_func()
				local L_290_ = L_236_func() - (#{
					5231,
					5804,
					280,
					395,
					1977,
					2152,
					3882,
					1570,
					6890,
					2773,
					6453,
					61,
					4978,
					5415,
					2109,
					4646,
					5734,
					2543,
					735,
					1902
				} + L_226_ + 133595)
				for L_296_forvar0 = L_227_, L_290_ do
					local L_297_ = {}
					local L_298_ = L_235_func()
					if L_298_ == #{
						108,
						4617,
						3576,
						6894,
						4139,
						4666,
						2352,
						75,
						1255,
						5969,
						3345,
						1104,
						1532,
						3392,
						225,
						2333,
						4490,
						2696,
						3563,
						5893,
						3214,
						4110,
						2036,
						2051
					} + L_226_ + -48 then
						L_297_[40047] = #{
							525,
							1839,
							5610,
							5800,
							6176,
							90,
							2670,
							2561,
							5045,
							6632,
							1175,
							5433,
							2096,
							1694,
							1814,
							1208,
							1354,
							3623,
							5192,
							2153,
							4668,
							5292
						} + L_226_ + 119803 == #{
							898,
							3630,
							2514,
							4590,
							1193,
							3510,
							3317,
							4205,
							671,
							5088,
							4806,
							3913,
							1136,
							2006,
							398,
							6116,
							3816,
							1286,
							1711,
							3508
						} + L_226_ + 83106
					end
					if L_298_ == #{
						4386,
						1957,
						3410,
						2655,
						6185,
						5613,
						2254,
						477,
						4831,
						3402,
						1645,
						5173,
						6581,
						4211,
						6135,
						1076,
						2959,
						2867,
						3613,
						2798,
						4865,
						6426
					} + L_226_ + 18 then
						L_297_[40047] = #{
							6313,
							1019,
							5980,
							2891,
							2240,
							2763,
							376,
							5761,
							5080,
							1635,
							5877,
							2213,
							4677,
							4379,
							3286,
							6010,
							4068,
							3610,
							2714,
							4903,
							4487
						} + L_226_ + 50596 == #{
							6313,
							1019,
							5980,
							2891,
							2240,
							2763,
							376,
							5761,
							5080,
							1635,
							5877,
							2213,
							4677,
							4379,
							3286,
							6010,
							4068,
							3610,
							2714,
							4903,
							4487
						} + L_226_ + 50596
					end
					if L_298_ == #{
						1246,
						3460,
						6342,
						3914,
						1965,
						904,
						6334,
						1519,
						6740,
						3996,
						5434,
						3542,
						5842,
						5538,
						3650,
						4334,
						3874,
						945,
						2662,
						4650,
						3062
					} + L_226_ + 126 then
						L_297_[40047] = L_235_func()
					end
					if L_298_ == #{
						2901,
						1821,
						1898,
						727,
						2060,
						476,
						2493,
						358,
						5714,
						5857,
						1010,
						155,
						254,
						97,
						4123,
						2686,
						2685,
						1023,
						3399,
						2115,
						1584,
						4378,
						5717
					} + L_226_ + 3 then
						L_297_[40047] = L_238_func()
					end
					if L_298_ == #{
						1347,
						2983,
						3002,
						1622,
						360,
						2907,
						2483,
						1118,
						1989,
						4939,
						3445,
						1953,
						5448,
						2553,
						5362,
						5669,
						2991,
						1043,
						5159,
						5207,
						6229,
						2710,
						4023,
						463
					} + L_226_ + -59 then
						L_297_[40047] = L_238_func()
					end
					if L_298_ == #{
						3116,
						2048,
						527,
						2371,
						453,
						2800,
						3597,
						3379,
						2168,
						4701,
						4527,
						3879,
						1873,
						2425,
						3725,
						4842,
						5692,
						2325,
						1018,
						509,
						6167
					} + L_226_ + -14 then
						L_297_[40047] = L_240_func(L_241_)
					end
					if L_298_ == #{
						306,
						316,
						1911,
						3317,
						3507,
						2029,
						5123,
						1109,
						5947,
						3205,
						5051,
						1044
					} then
						L_297_[40047] = L_236_func()
					end
					if L_298_ == #{
						2281,
						304,
						6440,
						1774,
						2079,
						2727,
						6406,
						5495,
						3407,
						3228,
						2319,
						5038,
						851,
						6522,
						4124,
						1949,
						3968,
						1764,
						3562,
						3957,
						5645,
						2693
					} + L_226_ + -89 then
						L_297_[40047] = L_238_func()
					end
					if L_298_ == #{
						750,
						6689,
						4224,
						1238,
						2689,
						5895,
						5547,
						6342,
						1389,
						259,
						5454,
						4011,
						665,
						3348,
						3479,
						6888,
						2058,
						1148,
						1369,
						2284,
						4997,
						778
					} + L_226_ + -77 then
						L_297_[40047] = L_240_func(#{
							3522,
							193,
							4686,
							399,
							5770,
							707,
							3352,
							3015,
							5996,
							1704,
							2303,
							3375,
							416,
							545,
							3598,
							1523,
							5512,
							3519,
							101,
							1853,
							3150,
							4597,
							5853,
							4522
						} + L_226_ + -3)
					end
					L_287_[103667][L_296_forvar0 - L_227_] = L_297_
				end
				L_287_[30793] = L_235_func()
				L_235_func()
				L_236_func()
				L_236_func()
				L_235_func()
				L_235_func()
				L_287_[13226] = L_235_func()
				L_235_func()
				L_287_[128277] = L_235_func()
				local L_291_ = L_236_func()
				for L_299_forvar0 = L_227_, L_291_ do
					L_287_[38060][L_299_forvar0 - L_227_] = L_243_func()
				end
				return L_287_
			end
			local function L_244_func(L_300_arg0, L_301_arg1, L_302_arg2)
				local L_303_, L_304_ = 32, 2
				local L_305_ = L_300_arg0[9417]
				local L_306_ = L_215_({}, {
					__index = function(L_315_arg0, L_316_arg1)
						local L_317_ = L_300_arg0[103667][L_316_arg1]
						if L_220_(L_216_(L_317_[40047]), 1, 1) == "s" then
							return {
								[40047] = L_220_(L_317_[40047], 3)
							}
						end
						return L_317_
					end
				})
				local L_307_ = 30793
				local L_308_ = L_300_arg0[38060]
				local L_309_ = 40047
				local L_310_ = L_300_arg0[128277]
				local L_311_ = 38582
				local L_312_ = L_300_arg0[45149]
				local L_313_ = 34201
				local function L_314_func(...)
					local L_318_ = 0
					local L_319_ = {
						L_212_({}, 1, L_300_arg0[13226])
					}
					local L_320_ = 1
					local L_321_ = {}
					local L_322_ = {}
					local L_323_ = 1
					local L_324_ = L_217_()
					local L_325_ = {
						...
					}
					local L_326_ = #L_325_ - 1
					for L_333_forvar0 = 0, L_326_ do
						if L_333_forvar0 < L_310_ then
							L_319_[L_333_forvar0] = L_325_[L_333_forvar0 + 1]
						end
					end
					local function L_327_func(...)
						local L_334_ = L_210_("#", ...)
						local L_335_ = {
							...
						}
						return L_334_, L_335_
					end
					local function L_328_func()
						while true do
							local L_336_ = L_305_[L_320_]
							local L_337_ = L_336_[38582]
							L_320_ = L_320_ + 1
							local L_338_ = L_336_[18579]
							local L_339_ = L_336_[130194]
							local L_340_ = L_336_[130194] - L_228_
							local L_341_ = L_336_[34201]
							local L_342_ = L_336_[40637]
							if L_337_ < 19 then
								if L_337_ < 9 then
									if L_337_ >= 4 then
										if L_337_ >= 6 then
											if L_337_ >= 7 then
												if L_337_ ~= 8 then
													L_324_[L_306_[L_339_][L_309_]] = L_319_[L_338_]
												else
													L_319_[L_338_] = L_306_[L_339_][L_309_]
												end
											else
												local L_343_, L_344_, L_345_
												if L_341_ ~= 1 then
													if L_341_ ~= 0 then
														L_344_ = L_338_ + L_341_ - 1
													else
														L_344_ = L_318_
													end
													L_344_, L_343_ = L_327_func(L_319_[L_338_](L_212_(L_319_, L_338_ + 1, L_344_)))
												else
													L_344_, L_343_ = L_327_func(L_319_[L_338_]())
												end
												if L_342_ ~= 1 then
													if L_342_ ~= 0 then
														L_344_ = L_338_ + L_342_ - 2
													else
														L_344_ = L_344_ + L_338_
													end
													L_345_ = 0
													for L_346_forvar0 = L_338_, L_344_ do
														L_345_ = L_345_ + 1
														L_319_[L_346_forvar0] = L_343_[L_345_]
													end
												end
												L_318_ = L_344_ - 1
											end
										elseif L_337_ ~= 5 then
											if L_341_ > 255 then
												L_341_ = L_306_[L_341_ - 256][L_309_]
											else
												L_341_ = L_319_[L_341_]
											end
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											L_319_[L_338_] = L_341_ / L_342_
										else
											L_319_[L_338_] = L_341_ ~= 0
											if L_342_ ~= 0 then
												L_320_ = L_320_ + 1
											end
										end
									elseif L_337_ < 2 then
										if L_337_ ~= 1 then
											if L_341_ > 255 then
												L_341_ = L_306_[L_341_ - 256][L_309_]
											else
												L_341_ = L_319_[L_341_]
											end
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											L_319_[L_338_] = L_341_ - L_342_
										else
											if L_341_ > 255 then
												L_341_ = L_306_[L_341_ - 256][L_309_]
											else
												L_341_ = L_319_[L_341_]
											end
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											if L_341_ == L_342_ ~= (L_338_ ~= 0) then
												L_320_ = L_320_ + 1
											end
										end
									elseif L_337_ == 3 then
										if not not L_319_[L_338_] == (L_342_ == 0) then
											L_320_ = L_320_ + 1
										end
									else
										L_319_[L_338_] = L_302_arg2[L_341_]
									end
								elseif L_337_ >= 14 then
									if L_337_ < 16 then
										if L_337_ ~= 15 then
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											L_319_[L_338_] = L_319_[L_341_][L_342_]
										else
											for L_347_forvar0 = L_338_, L_341_ do
												L_319_[L_347_forvar0] = nil
											end
										end
									elseif L_337_ >= 17 then
										if L_337_ == 18 then
											if L_341_ > 255 then
												L_341_ = L_306_[L_341_ - 256][L_309_]
											else
												L_341_ = L_319_[L_341_]
											end
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											L_319_[L_338_] = L_341_ % L_342_
										else
											local L_348_ = (L_342_ - 1) * 50
											if L_341_ == 0 then
												L_341_ = L_318_ - L_338_
											end
											for L_349_forvar0 = 1, L_341_ do
												L_319_[L_338_][L_348_ + L_349_forvar0] = L_319_[L_338_ + L_349_forvar0]
											end
										end
									else
										local L_350_ = L_319_[L_341_]
										for L_351_forvar0 = L_341_ + 1, L_342_ do
											L_350_ = L_350_ .. L_319_[L_351_forvar0]
										end
										L_319_[L_338_] = L_350_
									end
								elseif L_337_ >= 11 then
									if L_337_ >= 12 then
										if L_337_ ~= 13 then
											L_319_[L_338_] = -L_319_[L_341_]
										else
											local L_352_ = L_308_[L_339_]
											local L_353_ = {}
											if L_352_[L_307_] > 0 then
												do
													local L_355_ = {}
													L_353_ = L_215_({}, {
														__index = function(L_356_arg0, L_357_arg1)
															local L_358_ = L_355_[L_357_arg1]
															return L_358_[1][L_358_[2]]
														end,
														__newindex = function(L_359_arg0, L_360_arg1, L_361_arg2)
															local L_362_ = L_355_[L_360_arg1]
															L_362_[1][L_362_[2]] = L_361_arg2
														end
													})
													for L_363_forvar0 = 1, L_352_[L_307_] do
														local L_364_ = L_305_[L_320_]
														if L_364_[L_311_] == L_303_ then
															L_355_[L_363_forvar0 - 1] = {
																L_319_,
																L_364_[L_313_]
															}
														elseif L_364_[L_311_] == L_304_ then
															L_355_[L_363_forvar0 - 1] = {
																L_302_arg2,
																L_364_[L_313_]
															}
														end
														L_320_ = L_320_ + 1
													end
													L_321_[#L_321_ + 1] = L_355_
												end
											end
											local L_354_ = L_244_func(L_352_, L_324_, L_353_)
											L_319_[L_338_] = L_354_
										end
									else
										local L_365_ = L_319_[L_338_ + 2]
										local L_366_ = L_319_[L_338_] + L_365_
										L_319_[L_338_] = L_366_
										if L_365_ > 0 then
											if L_366_ <= L_319_[L_338_ + 1] then
												L_320_ = L_320_ + L_340_
												L_319_[L_338_ + 3] = L_366_
											end
										elseif L_366_ >= L_319_[L_338_ + 1] then
											L_320_ = L_320_ + L_340_
											L_319_[L_338_ + 3] = L_366_
										end
									end
								elseif L_337_ ~= 10 then
									if L_341_ > 255 then
										L_341_ = L_306_[L_341_ - 256][L_309_]
									else
										L_341_ = L_319_[L_341_]
									end
									if L_342_ > 255 then
										L_342_ = L_306_[L_342_ - 256][L_309_]
									else
										L_342_ = L_319_[L_342_]
									end
									if L_341_ < L_342_ ~= (L_338_ ~= 0) then
										L_320_ = L_320_ + 1
									end
								else
									local L_367_, L_368_
									if L_341_ ~= 1 then
										if L_341_ ~= 0 then
											L_368_ = L_338_ + L_341_ - 1
										else
											L_368_ = L_318_
										end
										L_368_, L_367_ = L_327_func(L_319_[L_338_](L_212_(L_319_, L_338_ + 1, L_368_)))
									else
										L_368_, L_367_ = L_327_func(L_319_[L_338_]())
									end
									L_319_ = L_367_
									return true, 1, L_368_
								end
							elseif L_337_ >= 28 then
								if L_337_ >= 33 then
									if L_337_ < 35 then
										if L_337_ ~= 34 then
											L_319_[L_338_] = {
												L_212_(L_229_, 1, L_341_ == 0 and 895 or L_341_)
											}
										else
											if L_341_ > 255 then
												L_341_ = L_306_[L_341_ - 256][L_309_]
											else
												L_341_ = L_319_[L_341_]
											end
											if L_342_ > 255 then
												L_342_ = L_306_[L_342_ - 256][L_309_]
											else
												L_342_ = L_319_[L_342_]
											end
											L_319_[L_338_] = L_341_ + L_342_
										end
									elseif L_337_ < 36 then
										L_319_[L_338_] = not L_319_[L_341_]
									elseif L_337_ ~= 37 then
										if L_341_ > 255 then
											L_341_ = L_306_[L_341_ - 256][L_309_]
										else
											L_341_ = L_319_[L_341_]
										end
										if L_342_ > 255 then
											L_342_ = L_306_[L_342_ - 256][L_309_]
										else
											L_342_ = L_319_[L_342_]
										end
										if L_341_ <= L_342_ ~= (L_338_ ~= 0) then
											L_320_ = L_320_ + 1
										end
									else
										L_319_[L_338_] = #L_319_[L_341_]
									end
								elseif L_337_ < 30 then
									if L_337_ == 29 then
										L_341_ = L_319_[L_341_]
										if L_342_ > 255 then
											L_342_ = L_306_[L_342_ - 256][L_309_]
										else
											L_342_ = L_319_[L_342_]
										end
										L_319_[L_338_ + 1] = L_341_
										L_319_[L_338_] = L_341_[L_342_]
									else
										local L_369_ = L_338_ + 2
										local L_370_ = {
											L_319_[L_338_](L_319_[L_338_ + 1], L_319_[L_338_ + 2])
										}
										for L_371_forvar0 = 1, L_342_ do
											L_319_[L_369_ + L_371_forvar0] = L_370_[L_371_forvar0]
										end
										if L_319_[L_338_ + 3] ~= nil then
											L_319_[L_338_ + 2] = L_319_[L_338_ + 3]
										else
											L_320_ = L_320_ + 1
										end
									end
								elseif L_337_ < 31 then
									local L_372_ = L_341_ > 0 and L_341_ - 1 or L_326_ - L_310_
									if L_372_ < 0 then
										L_372_ = -1
									end
									for L_373_forvar0 = L_338_, L_338_ + L_372_ do
										L_319_[L_373_forvar0] = L_325_[L_310_ + (L_373_forvar0 - L_338_) + 1]
									end
									L_318_ = L_338_ + L_372_
								elseif L_337_ ~= 32 then
									if L_341_ == 1 then
										return true
									end
									local L_374_ = L_338_ + L_341_ - 2
									if L_341_ == 0 then
										L_374_ = L_318_
									end
									return true, L_338_, L_374_
								else
									L_319_[L_338_] = L_319_[L_341_]
								end
							elseif L_337_ < 23 then
								if L_337_ >= 21 then
									if L_337_ ~= 22 then
										L_320_ = L_320_ + L_340_
									else
										L_302_arg2[L_341_] = L_319_[L_338_]
									end
								elseif L_337_ == 20 then
									if L_341_ > 255 then
										L_341_ = L_306_[L_341_ - 256][L_309_]
									else
										L_341_ = L_319_[L_341_]
									end
									if L_342_ > 255 then
										L_342_ = L_306_[L_342_ - 256][L_309_]
									else
										L_342_ = L_319_[L_342_]
									end
									L_319_[L_338_] = L_341_ * L_342_
								else
									for L_375_forvar0 = L_338_, #L_319_ do
										local L_376_ = L_323_
										for L_377_forvar0 = 1, #L_321_ do
											local L_378_ = L_321_[L_377_forvar0]
											for L_379_forvar0, L_380_forvar1 in next, L_378_, nil do
												if L_319_ == L_380_forvar1[1] and L_380_forvar1[2] == L_375_forvar0 then
													if not L_322_[L_376_] then
														L_322_[L_376_] = L_319_[L_375_forvar0]
														L_323_ = L_323_ + 1
													end
													L_378_[L_379_forvar0] = {
														L_322_,
														L_376_
													}
												end
											end
										end
									end
								end
							elseif L_337_ < 25 then
								if L_337_ == 24 then
									L_319_[L_338_] = L_209_(L_211_(L_319_[L_338_]), "`for` initial value must be a number")
									L_319_[L_338_ + 1] = L_209_(L_211_(L_319_[L_338_ + 1]), "`for` limit value must be a number")
									L_319_[L_338_ + 2] = L_209_(L_211_(L_319_[L_338_ + 2]), "`for` step value must be a number")
									L_319_[L_338_] = L_319_[L_338_] - L_319_[L_338_ + 2]
									L_320_ = L_320_ + L_340_
								else
									if L_341_ > 255 then
										L_341_ = L_306_[L_341_ - 256][L_309_]
									else
										L_341_ = L_319_[L_341_]
									end
									if L_342_ > 255 then
										L_342_ = L_306_[L_342_ - 256][L_309_]
									else
										L_342_ = L_319_[L_342_]
									end
									L_319_[L_338_][L_341_] = L_342_
								end
							elseif L_337_ < 26 then
								if not not L_319_[L_341_] == (L_342_ == 0) then
									L_320_ = L_320_ + 1
								else
									L_319_[L_338_] = L_319_[L_341_]
								end
							elseif L_337_ ~= 27 then
								if L_341_ > 255 then
									L_341_ = L_306_[L_341_ - 256][L_309_]
								else
									L_341_ = L_319_[L_341_]
								end
								if L_342_ > 255 then
									L_342_ = L_306_[L_342_ - 256][L_309_]
								else
									L_342_ = L_319_[L_342_]
								end
								L_319_[L_338_] = L_341_ ^ L_342_
							else
								L_319_[L_338_] = L_324_[L_306_[L_339_][L_309_]]
							end
						end
					end
					local L_329_, L_330_, L_331_, L_332_ = L_213_(L_328_func)
					if L_329_ then
						if L_331_ then
							return L_212_(L_319_, L_331_, L_332_)
						end
					else
						local L_381_ = L_224_("Luraph Script:" .. (L_312_[L_320_ - 1] or "") .. ": " .. L_218_(L_330_), "[^:]+:%d*: ", function(L_382_arg0)
							if not L_225_(L_382_arg0, "Luraph Script:%d") then
								return ""
							end
						end)
						L_219_(L_381_, 0)
					end
				end
				L_214_(L_314_func, L_301_arg1)
				return L_314_func
			end
			local L_245_ = L_243_func()
			return L_244_func(L_245_, L_233_arg1)()
		end
		L_231_func
	end

end)

L_37_:AddButton("Lay Spinbot (T) ", function()
	local L_383_ = false
	local L_384_ = game:GetService("UserInputService");
	L_384_.InputBegan:Connect(function(L_385_arg0, L_386_arg1)
		if (L_385_arg0.KeyCode == Enum.KeyCode.T and L_386_arg1 == false) then
			if L_383_ == false then
				L_383_ = true
				wait()
				getgenv().urspeed = 500
				local L_387_ = game.Players.LocalPlayer.Character
				while wait() do
					L_387_.HumanoidRootPart.CFrame = L_387_.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(urspeed), 0)
				end
			else
				L_383_ = false
				getgenv().urspeed = 0
			end
		end
	end);
	game:GetService('RunService').Stepped:connect(function()
		if L_383_ == true then
			local L_388_ = Instance.new("Animation");
			function stopTracks()
				for L_389_forvar0, L_390_forvar1 in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks(
    
        ) do
					if (L_390_forvar1.Animation.AnimationId:match("rbxassetid")) then
						L_390_forvar1:Stop();
					end;
				end;
			end;
			function loadAnimation(L_391_arg0)
				if L_388_.AnimationId == L_391_arg0 then
					L_388_.AnimationId = "1";
				else
					L_388_.AnimationId = L_391_arg0;
					local L_392_ =
                game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(
                L_388_
            );
					L_392_:Play();
				end;
			end;
			loadAnimation("rbxassetid://3152378852");
			wait(1.2)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if L_383_ == false then
			stopTracks();
		end
	end)
end)

L_40_:AddButton("Headless (Client Sided)", function()
	local L_393_ = game.Players.LocalPlayer.Character
	local L_394_ = L_393_:WaitForChild("Head")
	local L_395_ = L_394_:WaitForChild("face")
	L_395_.Transparency = 1 --Texture = "rbxassetid://209712379"
	L_394_.Transparency = 1

end)
L_40_:AddButton("Korblox (Client Sided)", function()
	local L_396_ = game.Players.LocalPlayer.Character
	local L_397_ = game.Players.LocalPlayer.Character
	local L_398_ = L_396_.Head
	local L_399_ = L_398_.face
	local L_400_ = L_397_.RightFoot
	local L_401_ = L_397_.RightLowerLeg
	local L_402_ = L_397_.RightUpperLeg
	local L_403_ = L_397_.LeftFoot
	local L_404_ = L_397_.LeftLowerLeg
	local L_405_ = L_397_.LeftUpperLeg
    
    -- Right
	L_400_.MeshId = "http://www.roblox.com/asset/?id=902942093"
	L_401_.MeshId = "http://www.roblox.com/asset/?id=902942093"
	L_402_.MeshId = "http://www.roblox.com/asset/?id=902942096"
	L_402_.TextureID = "http://roblox.com/asset/?id=902843398"
	L_400_.Transparency = 1
	L_401_.Transparency = 1
    
end)

L_40_:AddButton("Blizzard Beast Mode (Client)", function()
	local L_406_ = game.Players.LocalPlayer.Character
	local L_407_ = L_406_:WaitForChild("Head")
	local L_408_ = L_407_:WaitForChild("face")
	L_408_.Texture = "rbxassetid://209712379"
end)
L_40_:AddButton("Super Super Happy Face (Client)", function()
	local L_409_ = game.Players.LocalPlayer.Character
	local L_410_ = L_409_:WaitForChild("Head")
	local L_411_ = L_410_:WaitForChild("face")
	L_411_.Texture = "rbxassetid://494290547"
end)

L_40_:AddButton("Beast Mode (Client Sided)", function()
	local L_412_ = game.Players.LocalPlayer.Character
	local L_413_ = L_412_:WaitForChild("Head")
	local L_414_ = L_413_:WaitForChild("face")
	L_414_.Texture = "rbxassetid://127959433"
end)
L_40_:AddButton("Playful Vampire (Client Sided)", function()
	local L_415_ = game.Players.LocalPlayer.Character
	local L_416_ = L_415_:WaitForChild("Head")
	local L_417_ = L_416_:WaitForChild("face")
	L_417_.Texture = "rbxassetid://2409281591"
end)

local L_66_ = L_40_:AddToggle("Headless (FE)", false, function()
	local L_418_ = game.Players.LocalPlayer
	L_418_.Character.Head:BreakJoints()
	L_418_.Character.Head.Position = Vector3.new(0, 999999999999, 0)
end)
L_66_:AddKeybind()
local L_67_ = L_40_:AddToggle("Korblox (FE)", false, function()
	game.Players.LocalPlayer.Character.RightUpperLeg:Destroy()
end)
L_67_:AddKeybind()







L_41_:AddButton("Guns (Admin Base)", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-874.903992, -32.6492004, -525.215698)
end)

L_41_:AddButton("High Medium Armor", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-934.73651123047, -28.492471694946, 565.99884033203)
end)

L_41_:AddButton("Food", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-788.39318847656, -39.649200439453, -935.27795410156)
end)

L_41_:AddButton("AK Bush", function()
	local L_419_ = Instance.new("Animation");
	function stopTracks()
		for L_420_forvar0, L_421_forvar1 in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks(
    
        ) do
			if (L_421_forvar1.Animation.AnimationId:match("rbxassetid")) then
				L_421_forvar1:Stop();
			end;
		end;
	end;
	function loadAnimation(L_422_arg0)
		if L_419_.AnimationId == L_422_arg0 then
			L_419_.AnimationId = "1";
		else
			L_419_.AnimationId = L_422_arg0;
			local L_423_ =
                game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(
                L_419_
            );
			L_423_:Play();
		end;
	end;
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-626.288757, 7.99984694, -772.322632, -0.997374237, -1.67662592e-10, -0.0724197701, -1.00076274e-10, 1, -9.36886457e-10, 0.0724197701, -9.27178945e-10, -0.997374237)
	loadAnimation("rbxassetid://3152378852");
	wait(1.2)
	stopTracks();
end)

L_41_:AddButton("Uphill Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(485.651947, 112.5, -644.316833, -0.998899043, 1.33881997e-06, 0.0469136797, 8.00526664e-07, 1, -1.14929126e-05, -0.0469136797, -1.14426994e-05, -0.998899043)
end)

L_41_:AddButton("AK Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-658.31897, 80.9998474, -778.077576, -0.142138869, 1.05273443e-08, -0.989845812, 4.51260629e-09, 1, 9.98731764e-09, 0.989845812, -3.04721426e-09, -0.142138869)
end)


L_41_:AddButton("Playground Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-260.836182, 126.424866, -877.783875, -0.977067351, -1.56508904e-05, -0.212922528, 9.92513264e-07, 1, -7.80593255e-05, 0.212922528, -7.64806027e-05, -0.977067351)
end)

L_41_:AddButton("Bank Buildings", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-327.583862, 80.4338913, -278.811951, -0.0466220938, -1.94237373e-08, 0.998912573, 1.07243459e-07, 1, 2.44502392e-08, -0.998912573, 1.08266761e-07, -0.0466220938)
end)  
L_41_:AddButton("Rev Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-659.053162, 110.748001, -158.224365, 0.146754071, -2.38941595e-08, -0.989172995, -1.60316838e-09, 1, -2.43935396e-08, 0.989172995, 5.16566212e-09, 0.146754071)
end)
L_41_:AddButton("Casino Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1048.95093, 110.254997, -154.554016, 0.198458344, 0.0412604436, -0.979240835, -4.06676299e-05, 0.999113858, 0.0420895219, 0.98010987, -0.00831318926, 0.198284075)
end) 
L_41_:AddButton("Flank Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(376.730621, 130.748001, -245.620468, 0.996583343, 5.90310174e-06, -0.0825867951, -1.72590728e-06, 1, 5.06508768e-05, 0.0825867951, -5.03353003e-05, 0.996583343)
end)  
L_41_:AddButton("Gas Station", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(608.599426, 65.3087997, -267.643066, -0.414288431, -1.04483455e-09, -0.91014564, -1.30518893e-08, 1, 4.79309215e-09, 0.91014564, 1.38648408e-08, -0.41428)
end) 


L_41_:AddButton("School", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-581.790283, 68.8BQAzQwVETtFWGmAFZjAwNSYA7M4EczfocpPa2kZ6AiC1tVQuAhJTRjLG5Nkk4QqFWHxiKBdi6RuUFjC5zMhvhUyK7tatMA.65130132e-05, -0.975498199, -5.77078645e-05, 0.22005)
end) 

L_41_:AddButton("Circus", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(170.510178, 59.6617432, -944.884216, 0.806685388, -8.34191383e-08, 0.590979934, 9.47717194e-09, 1, 1.28217792e-07, -0.590979934, -9.78305081e-08, 0.806685388)
end) 

L_41_:AddButton("UFO", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(65.1504517, 138.999954, -691.819031, -0.935115993, -5.9791418e-08, -0.354341775, -3.10840989e-08, 1, -8.67077574e-08, 0.354341775, -7.0067415e-08, -0.935115993)
end) 
L_41_:AddButton("Bank Tree", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-374.538391, 102.052887, -440.20871, 0.958144963, 9.24065989e-06, -0.286283433, -9.98981818e-07, 1, 2.89345699e-05, 0.286283433, -2.74375216e-05, 0.958144963)
end) 

L_41_:AddButton("Circus Mountain", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(292.643799, 122.749977, -860.128784, 0.986730993, 5.09704545e-09, 0.162363499, -9.24942123e-10, 1, -2.57716568e-08, -0.162363499, 2.52795154e-08, 0.986730993)
end) 

L_41_:AddButton("Gym Top", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-76.178093, 56.6998138, -629.940979, -0.9998914, -1.09370752e-07, 0.0147391548, -1.0945012e-07, 1, -4.57786342e-09, -0.0147391548, -6.1905685e-09, -0.9998914)
end) 

L_38_:AddButton("God Mode (Guns)", function()
	local L_424_ = game.Players.LocalPlayer

	L_424_.Character:FindFirstChild("FULLY_LOADED_CHAR").Parent = game.ReplicatedStorage
	L_424_.Character:Remove()
	game.ReplicatedStorage:FindFirstChild("FULLY_LOADED_CHAR").Parent = L_424_.Character
	local L_425_ = true

	while wait() do
		pcall(function()
			if game.Players.LocalPlayer.Character.BodyEffects:FindFirstChild("BreakingParts") and L_425_ == true then
				game.Players.LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
				local L_426_ = Instance.new("Folder", game.Players.LocalPlayer.Character)
				L_426_.Name = "FULLY_LOADED_CHAR"
				wait()
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
				L_424_.Character:FindFirstChild("FULLY_LOADED_CHAR").Parent = game.ReplicatedStorage
			end
		end)
	end
end)
L_38_:AddButton("God Mode (Melees)", function()
	local function L_427_func()
		local L_428_ = game:GetService('Players').LocalPlayer;
		local L_429_ = L_428_.Character;
		L_429_:FindFirstChildOfClass('Humanoid').Health = 0;

		local L_430_ = L_428_.CharacterAdded:Wait();
		local L_431_ = Instance.new('Folder');
		L_431_.Name = 'FULLY_LOADED_CHAR';
		L_431_.Parent = L_430_;
		L_430_:WaitForChild('RagdollConstraints'):Destroy();
		local L_432_ = Instance.new('BoolValue', L_430_);
		L_432_.Name = 'RagdollConstraints';

		local L_433_ = game:GetService("Players")
		local L_434_ = L_433_.LocalPlayer
		local L_435_ = L_434_.Character

		L_435_.BodyEffects.Armor:Destroy()
		L_435_.BodyEffects.Defense:Destroy()

		local L_436_ = Instance.new("NumberValue")
		L_436_.Name = "Defense"
		L_436_.Parent = L_435_.BodyEffects

		local L_437_ = Instance.new("NumberValue")
		L_437_.Name = "Armor"
		L_437_.Parent = L_435_.BodyEffects

		game.ReplicatedStorage.MainEvent:FireServer("Block", true)
	end


	L_427_func()
	while wait() do
		for L_438_forvar0, L_439_forvar1 in pairs(game.Players.LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):GetPlayingAnimationTracks()) do
			if L_439_forvar1.Name == 'Block' then
				L_439_forvar1:Stop()
			end
		end
	end	
end)

local L_68_ = L_43_:AddToggle("Silent Aim Toggle", true, function(L_440_arg0)
	looolniggerr.SilentAim = L_440_arg0
end)
L_68_:AddKeybind()

local L_69_ = L_43_:AddToggle("Visible Check", true, function(L_441_arg0)
	Ugly.VisibleCheck = L_441_arg0
end)
L_69_:AddKeybind()


L_43_:AddSlider("Blatantness", 0, 0, 100, 100, function(L_442_arg0)
	Ugly.HitChance  = (L_442_arg0)
end)

L_43_:AddTextbox("Silent Aim Prediction", "", function(L_443_arg0)
	looolniggerr.Prediction = (L_443_arg0)
end)
local L_70_ = L_43_:AddDropdown("Hitboxes",  {
	"Head",
	"UpperTorso",
	"HumanoidRootPart",
	"LowerTorso",
	"RightFoot"
}, "HumanoidRootPart", function(L_444_arg0)
	Ugly.TargetPart = (L_444_arg0)
end)

L_44_:AddSlider("Size", 0, 1, 320, 30, function(L_445_arg0)
	Ugly.FOV = (L_445_arg0)
end)
local L_71_ = L_44_:AddToggle("Silent Aim Show Fov", false, function(L_446_arg0)
	Ugly.ShowFOV = (L_446_arg0)
end)

L_71_:AddColorpicker(Color3.new(), function(L_447_arg0)
	Ugly.FOVColour = L_447_arg0
end)
L_45_:AddButton("Silent Aimbot (Auto Adjust) ", function()
	function notify(L_461_arg0, L_462_arg1, L_463_arg2)
		game.StarterGui:SetCore("SendNotification", {
			Title = L_461_arg0;
			Text = L_462_arg1;
			Duration = L_463_arg2;
		})
	end
	local L_448_ = Instance.new("ScreenGui")
	local L_449_ = Instance.new("TextLabel")

--Properties:
	L_448_.Parent = game.CoreGui
	L_448_.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	getgenv().Settings = {
		Nigger = false
	}
	local L_450_ = getgenv().Settings
	_G.KEY = "q"
	_G.PART = "LowerTorso"
	_G.PRED = 0.037
	_G.Frame = Vector3.new(0, 0.53, 0)
	local L_451_ = game:GetService "Workspace".CurrentCamera
	local L_452_
	local L_453_ = false
	local L_454_ = nil
	local L_455_ = game.Players.LocalPlayer:GetMouse()
	local L_456_ = nil
	local L_457_ = Instance.new("Folder", game.CoreGui)
	function makemarker(L_464_arg0, L_465_arg1, L_466_arg2, L_467_arg3, L_468_arg4)
		local L_469_ = Instance.new("BillboardGui", L_464_arg0)
		L_469_.Name = "PP"
		L_469_.Adornee = L_465_arg1
		L_469_.Size = UDim2.new(L_467_arg3, L_468_arg4, L_467_arg3, L_468_arg4)
		L_469_.AlwaysOnTop = true
		local L_470_ = Instance.new("Frame", L_469_)
		L_470_.Size = UDim2.new(4, 0, 4, 0)
		L_470_.BackgroundTransparency = 0.1
		L_470_.BackgroundColor3 = L_466_arg2
		local L_471_ = Instance.new("UICorner", L_470_)
		L_471_.CornerRadius = UDim.new(50, 50)
		return (L_469_)
	end
	local L_458_ = game.Players:GetPlayers()
	function noob(L_472_arg0)
		local L_473_
		repeat
			wait()
		until L_472_arg0.Character
		local L_474_ = makemarker(L_457_, L_472_arg0.Character:WaitForChild(_G.PART), Color3.fromRGB(255, 255, 255), 0.0, 0)
		L_474_.Name = L_472_arg0.Name
		L_472_arg0.CharacterAdded:connect(
        function(L_476_arg0)
			L_474_.Adornee = L_476_arg0:WaitForChild(_G.PART)
		end
    )
		local L_475_ = Instance.new("TextLabel", L_474_)
		L_475_.BackgroundTransparency = 1
		L_475_.Position = UDim2.new(0, 0, 0, -50)
		L_475_.Size = UDim2.new(0, 100, 0, 100)
		L_475_.Font = Enum.Font.SourceSansSemibold
		L_475_.TextSize = 14
		L_475_.TextColor3 = Color3.new(1, 1, 1)
		L_475_.TextStrokeTransparency = 0
		L_475_.TextYAlignment = Enum.TextYAlignment.Bottom
		L_475_.Text = "Name: " .. L_472_arg0.Name
		L_475_.ZIndex = 10
		spawn(
        function()
			while wait() do
				if L_472_arg0.Character then
                --TextLabel.Text = player.Name.." | Bounty: "..tostring(player:WaitForChild("leaderstats").Wanted.Value).." | "..tostring(math.floor(player.Character:WaitForChild("Humanoid").Health))
				end
			end
		end
    )
	end
	for L_477_forvar0 = 1, #L_458_ do
		if L_458_[L_477_forvar0] ~= game.Players.LocalPlayer then
			noob(L_458_[L_477_forvar0])
		end
	end
	game.Players.PlayerAdded:connect(
    function(L_478_arg0)
		noob(L_478_arg0)
	end
)
	game.Players.PlayerRemoving:Connect(
    function(L_479_arg0)
		L_457_[L_479_arg0.Name]:Destroy()
	end
)
	spawn(
    function()
		L_456_.Anchored = true
		L_456_.CanCollide = false
		L_456_.Size = Vector3.new(0.1, 0.1, 0.1)
		L_456_.Transparency = 0.1
		makemarker(L_456_, L_456_, Color3.fromRGB(255, 255, 255), 0.20, 0)
	end
)
	L_455_.KeyDown:Connect(
    function(L_480_arg0)
		if L_480_arg0 ~= _G.KEY then
			return
		end
		if L_453_ then
            -- guimain[Plr.Name].Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			L_453_ = false
			if L_450_.Nigger then
				notify("INSOMNIAC", "Unlocked", 1)
			end
		else
            --guimain[Plr.Name].Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			L_453_ = true
			L_452_ = getClosestPlayerToCursor()
			if L_450_.Nigger then
				notify("INSOMNIAC", "Locked Onto: " .. tostring(L_452_.Character.Humanoid.DisplayName) .. "", 1)
			end
		end
	end)
	function getClosestPlayerToCursor()
		local L_481_
		local L_482_ = math.huge
		for L_483_forvar0, L_484_forvar1 in pairs(game.Players:GetPlayers()) do
			if
            L_484_forvar1 ~= game.Players.LocalPlayer and L_484_forvar1.Character and L_484_forvar1.Character:FindFirstChild("Humanoid") and
                L_484_forvar1.Character.Humanoid.Health ~= 0 and
                L_484_forvar1.Character:FindFirstChild(_G.PART)
         then
				local L_485_ = L_451_:WorldToViewportPoint(L_484_forvar1.Character.PrimaryPart.Position)
				local L_486_ = (Vector2.new(L_485_.X, L_485_.Y) - Vector2.new(L_455_.X, L_455_.Y)).magnitude
				if L_486_ < L_482_ then
					L_481_ = L_484_forvar1
					L_482_ = L_486_
				end
			end
		end
		return L_481_
	end
	game:GetService "RunService".Stepped:connect(
    function()
		if L_453_ and L_452_.Character and L_452_.Character:FindFirstChild(_G.PART) then
			L_456_.CFrame =
                CFrame.new(L_452_.Character[_G.PART].Position + _G.Frame + (L_452_.Character[_G.PART].Velocity * L_454_))
		else
			L_456_.CFrame = CFrame.new(0, 9999, 0)
		end
	end
)
	local L_459_ = getrawmetatable(game)
	local L_460_ = L_459_.__namecall
	setreadonly(L_459_, false)
	L_459_.__namecall =
    newcclosure(
    function(...)
		local L_487_ = {
			...
		}
		if L_453_ and getnamecallmethod() == "FireServer" and L_487_[2] == "UpdateMousePos" then
			L_487_[3] = L_452_.Character[_G.PART].Position + _G.Frame + (L_452_.Character[_G.PART].Velocity * L_454_)
			return L_460_(unpack(L_487_))
		end
		return L_460_(...)
	end
)
	game.Players.LocalPlayer.Chatted:Connect(
    function(L_488_arg0)
		if L_488_arg0 == "print" then
			print(_G.PRED)
		end
	end
)
	game.Players.LocalPlayer.Chatted:Connect(
    function(L_489_arg0)
		if L_489_arg0 == "Code:1029" then
			_G.KEY = nil
			_G.AIR = nil
			_G.PART = nil
			_G.PRED = nil
			L_449_.Visible = false
		end
	end
)
	game.Players.LocalPlayer.Chatted:Connect(
    function(L_490_arg0)
		if L_490_arg0 == "Code:1030" then
			_G.KEY = "q"
			_G.AIR = 0.00005
			_G.PART = "LowerTorso"
			_G.PRED = 0.029
			L_449_.Visible = true
		end
	end
)
	game.Players.LocalPlayer.Chatted:Connect(
    function(L_491_arg0)
		if L_491_arg0 == "P+" then
			_G.PRED = _G.PRED + 0.001
		end
	end
)
	game.Players.LocalPlayer.Chatted:Connect(
    function(L_492_arg0)
		if L_492_arg0 == "P-" then
			_G.PRED = _G.PRED - 0.001
		end
	end
)
	while wait() do
		if getClosestPlayerToCursor().Character.Humanoid.Jump == true and getClosestPlayerToCursor().Character.Humanoid.FloorMaterial == Enum.Material.Air then
			_G.Frame = Vector3.new(0, -2.3, 0)
			wait(0.05)
		else
			local L_493_ = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
			local L_494_ = tostring(L_493_)
			local L_495_ = L_494_:split(" ")
			local L_496_ = L_495_[1]
			L_454_ = L_496_ / 950 + _G.PRED
			_G.Frame = Vector3.new(0, 0.53, 0)
		end
	end
end)


local L_72_ = L_45_:AddToggle("Notification Mode", false, function(L_497_arg0)
	Settings.Nigger = L_497_arg0
end)
L_72_:AddKeybind()




local L_73_ = L_42_:AddToggle("Revolver", false, function()
	L_10_ = game:GetService'Players'.LocalPlayer
	local L_498_ = '[Revolver] - $1300'
	local L_499_ = game.Workspace.Ignored.Shop[L_498_]
	local L_500_ = L_10_.Character.HumanoidRootPart.Position
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = L_499_.Head.CFrame + Vector3.new(0, 3, 0)
	wait(0.5)
	fireclickdetector(game.Workspace.Ignored.Shop[L_498_].ClickDetector)
	fireclickdetector(game.Workspace.Ignored.Shop[L_498_].ClickDetector)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_500_)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_500_)
end)
L_73_:AddKeybind()

local L_74_ = L_42_:AddToggle("Revolver Ammo", false, function()
	L_10_ = game:GetService'Players'.LocalPlayer
	local L_501_ = '12 [Revolver Ammo] - $75'
	local L_502_ = game.Workspace.Ignored.Shop[L_501_]
	local L_503_ = L_10_.Character.HumanoidRootPart.Position
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = L_502_.Head.CFrame + Vector3.new(0, 3, 0)
	wait(0.5)
	fireclickdetector(game.Workspace.Ignored.Shop[L_501_].ClickDetector)
	fireclickdetector(game.Workspace.Ignored.Shop[L_501_].ClickDetector)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_503_)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_503_)
end)    
L_74_:AddKeybind()

local L_75_ = L_42_:AddToggle("Double-Barrel", false, function()
	L_10_ = game:GetService'Players'.LocalPlayer
	local L_504_ = game.Workspace.Ignored.Shop['[Double-Barrel SG] - $1400']
	local L_505_ = L_10_.Character.HumanoidRootPart.Position
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = L_504_.Head.CFrame + Vector3.new(0, 3, 0)
	wait(0.5)
	fireclickdetector(game.Workspace.Ignored.Shop['[Double-Barrel SG] - $1400'].ClickDetector)
	fireclickdetector(game.Workspace.Ignored.Shop['[Double-Barrel SG] - $1400'].ClickDetector)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_505_)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_505_)
	
end)
L_75_:AddKeybind()

local L_76_ = L_42_:AddToggle("Double-Barrel Ammo", false, function()
	L_10_ = game:GetService'Players'.LocalPlayer
	local L_506_ = game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60']
	local L_507_ = L_10_.Character.HumanoidRootPart.Position
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = L_506_.Head.CFrame + Vector3.new(0, 3, 0)
	wait(0.5)
	fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_507_)
	L_10_.Character.HumanoidRootPart.CFrame = CFrame.new(L_507_)
end)
L_76_:AddKeybind()


game:GetService("Workspace").Ignored.Shop["[Double-Barrel SG] - $1400"]:Destroy()
game:GetService("Workspace").Ignored.Shop["18 [Double-Barrel SG Ammo] - $60"]:Destroy()
game:GetService("Workspace").Ignored.Shop["[Revolver] - $1300"]:Destroy()
game:GetService("Workspace").Ignored.Shop["12 [Revolver Ammo] - $75"]:Destroy()
